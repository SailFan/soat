<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tool.soat.dao.SoatNavMapper">
  <resultMap id="BaseResultMap" type="com.tool.soat.entity.SoatNav">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="nav_name" jdbcType="VARCHAR" property="navName" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="path" jdbcType="VARCHAR" property="path" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, nav_name, level, path
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from soat_nav
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectAllNav" resultMap="BaseResultMap">
    select id,nav_name,level,path from soat_nav
  </select>

  <select id="selectByLevel" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select s2.id,s2.nav_name,s2.level,s2.path from soat_nav as s1 inner join soat_nav as s2 on s2.level=s1.id where s1.id=#{id}
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from soat_nav
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.tool.soat.entity.SoatNav">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into soat_nav (id, nav_name, level, 
      path)
    values (#{id,jdbcType=INTEGER}, #{navName,jdbcType=VARCHAR}, #{level,jdbcType=INTEGER}, 
      #{path,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.tool.soat.entity.SoatNav">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into soat_nav
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="navName != null">
        nav_name,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="path != null">
        path,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="navName != null">
        #{navName,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="path != null">
        #{path,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tool.soat.entity.SoatNav">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update soat_nav
    <set>
      <if test="navName != null">
        nav_name = #{navName,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="path != null">
        path = #{path,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tool.soat.entity.SoatNav">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update soat_nav
    set nav_name = #{navName,jdbcType=VARCHAR},
      level = #{level,jdbcType=INTEGER},
      path = #{path,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>